{% set version = "2.47.0" %}

package:
  name: ray-packages
  version: {{ version }}

source:
  url: https://github.com/ray-project/ray/archive/ray-{{ version }}.tar.gz
  sha256: e6e7263c03d538722781203e93de388d47e04486ce9064713f0a2870183086dc
  patches:
    - patches/0001-Disable-making-entry-scripts.patch
    - patches/0002-Ignore-warnings-in-event.cc-and-logging.cc.patch
    - patches/0003-remove-dependencies.patch
    # See https://github.com/conda-forge/ray-packages-feedstock/issues/136
    # Keep in sync with current or active migration of libgrpc to avoid
    # ABI breakage
    - patches/0004-Vendor-grpc-1.67.1.patch
    - patches/0005-remove-stdlib-libc-from-.bazelrc.patch
    # Patch around non-const NAN on windows in protobuf 27.5
    - patches/0006-patch-protobuf-use-of-nan-on-windows.patch
    - patches/0007-patch-zlib-in-prometheus-cpp-and-boost.patch
    # Add missing include in new logging code for different absl
    - patches/0008-add-missing-include.patch
    # Patch bundled fmtlib/fmt in spdlog for char8_type which is invalid on macOS
    - patches/0009-patch-bundled-fmt-in-spdlog-for-invalid-char8_type.patch

build:
  number: 0

# Need these up here for conda-smithy to handle them properly.
requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
  host:
    - python

outputs:
  - name: ray-all
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-adag', exact=True) }}  # [not osx]
        - {{ pin_subpackage('ray-air', exact=True) }}
        - {{ pin_subpackage('ray-default', exact=True) }}
        - {{ pin_subpackage('ray-cgraph', exact=True) }}  # [not osx]
        - {{ pin_subpackage('ray-client', exact=True) }}
        - {{ pin_subpackage('ray-data', exact=True) }}
        - {{ pin_subpackage('ray-rllib', exact=True) }}
        - {{ pin_subpackage('ray-serve', exact=True) }}
        - {{ pin_subpackage('ray-train', exact=True) }}
        - {{ pin_subpackage('ray-tune', exact=True) }}
    test:
      imports:
        # dummy test; actual tests are in subpackages
        - ray

  - name: ray-core
    script: build-core.sh  # [not win]
    script: build-core.bat  # [win]
    build:
      entry_points:
        - ray = ray.scripts.scripts:main
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - bazel =6.5
        - bazel-toolchain =0.2.1  # [not win]
        - patchelf  # [linux]
        - colorama
        - curl
        - cython >=0.29.32
        - git =2.33  # [win]
        - libxcrypt  # [linux and py<39]
        - make
        - m2-bash  # [win]
        - psutil
        - python
        - setproctitle >=1.2.2,<1.4
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
      host:
        - python
        - pip
        - packaging
        - libgrpc
        - openjdk =11
        - setuptools
      run:
        - python
        - aiohttp >=3.7
        - aiosignal
        - click >=7.0
        - colorama
        - filelock
        - frozenlist
        - jsonschema
        - msgpack-python >=1.0.0,<2.0.0
        - packaging
        - protobuf >=3.15.3,!=3.19.5
        - psutil
        - pyyaml
        - requests
        - setproctitle >=1.2.2,<1.4
      run_constrained:

    test:
      imports:
        - ray
        - ray._raylet
        - ray.actor
        - ray.runtime_context
        - ray._private.state
        - ray._private.worker
      commands:
        - python -c "import ray; ray.init(include_dashboard=False)"
        - ray --help

  # the various ray[extra] installs, alphabetically
  - name: ray-air
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-data', exact=True) }}
        - {{ pin_subpackage('ray-serve', exact=True) }}
        - {{ pin_subpackage('ray-train', exact=True) }}
        - {{ pin_subpackage('ray-tune', exact=True) }}
    test:
      imports:
        - ray.air

  - name: ray-data
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-core', exact=True) }}
        - pandas >=1.3
        - numpy >=1.20
        - pyarrow >=9.0.0
        - fsspec
    test:
      imports:
        - ray.data

  - name: ray-default
    build:
      script:
        - cd python/ray/dashboard/client
        - npm install
        - npm ci
        - npm run build
        # not sure why this seems to get copied on windows but not linux...
        - mkdir -p $SP_DIR/ray/dashboard/client             # [not win]
        - cp -R ./build $SP_DIR/ray/dashboard/client/build  # [not win]
    requirements:
      build:
        - nodejs
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-core', exact=True) }}
        - aiohttp-cors
        - colorful
        - grpcio
        - opencensus
        - opentelemetry-sdk
        - opentelemetry-exporter-prometheus
        - opentelemetry-proto
        - prometheus_client >=0.7.1
        - py-spy >=0.2.0  # [py<312]
        - py-spy >=0.4.0  # [py>=312]
        - pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3
        - requests
        - smart_open
        - virtualenv >=20.0.24,!=20.21.1

    test:
      imports:
        - ray
        - ray.dashboard
      commands:
        - python -c "import ray; ray.init(include_dashboard=True)"

  - name: ray-client
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-core', exact=True) }}
        - grpcio
    test:
      imports:
        - ray
      commands:
        - ray start --head
        - python -c "import ray; ray.init('ray://127.0.0.1:10001')"
        - ray stop

  - name: ray-rllib
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-tune', exact=True) }}
        - dm-tree
        - gymnasium ==1.0.0
        - lz4
        - ormsgpack ==1.7.0
        - pyyaml
        - scipy
    test:
      imports:
        - ray.rllib

  - name: ray-serve
    build:
      entry_points:
        - serve = ray.serve.scripts:cli
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        - aiorwlock
        - fastapi
        - requests
        - starlette
        - uvicorn
        - watchfiles
        - pyOpenSSL
    test:
      imports:
        - ray.serve

  - name: ray-tune
    build:
      entry_points:
        - tune = ray.tune.scripts:cli
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        - fsspec
        - pandas
        - pyarrow >=6.0.1
        - requests
        - tensorboardX >=1.9
    test:
      imports:
        - ray.tune

  - name: ray-train
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-tune', exact=True) }}
        - pydantic !=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3
    test:
      imports:
        - ray.train

  - name: ray-observability
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        - opentelemetry-api
        - opentelemetry-sdk
        - opentelemetry-exporter-otlp
        - memray  # [not win]
    test:
      commands:
        - echo "no tests for ray-observability, it is a convenience bundle"

  - name: ray-adag
    build:
      skip: true  # [osx]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        - cupy
    test:
      commands:
        - echo "no tests for ray-adag, it is a convenience bundle"

  - name: ray-cgraph
    build:
      skip: true  # [osx]
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        - cupy
    test:
      commands:
        - echo "no tests for ray-cgraph, it is a convenience bundle"

about:
  home: https://github.com/ray-project/ray
  license: Apache-2.0
  license_family: Apache
  license_file:
    - LICENSE
    - licenses/abseil-LICENSE.txt
    - licenses/antirez-redis-COPYING.txt
    - licenses/arrow-LICENSE.txt
    - licenses/boost-LICENSE_1_0.txt
    - licenses/boringssl-LICENSE.txt
    - licenses/deckarep-golang-set-LICENSE.txt
    - licenses/flatbuffers-LICENSE.txt
    - licenses/gabime-spdlog-LICENSE.txt
    - licenses/gflags-COPYING.txt
    - licenses/glog-COPYING.txt
    - licenses/go-logr-LICENSE.txt
    - licenses/googletest-LICENSE.txt
    - licenses/grpc-LICENSE.txt
    - licenses/msgpack-COPYING.txt
    - licenses/onsi-ginkgo-LICENSE.txt
    - licenses/onsi-gomega-LICENSE.txt
    - licenses/opencensus-LICENSE.txt
    - licenses/opencensus-proto-LICENSE.txt
    - licenses/prometheus-LICENSE.txt
    - licenses/redis-hiredis-COPYING.txt
    - licenses/tporadowski-redis-license.txt
    - licenses/zlib-LICENSE.txt
  summary: Ray is a fast and simple framework for building and running distributed applications.
  description: |
    Ray is a fast and simple framework for building and running
    distributed applications. It is split into ray-core, ray-default,
    ray-serve, ray-rllib, ray-client, ray-data, ray-tune,
    ray-train, ray-observability, ray-adag, ray-cgraph, ray-llm and
    ray-all packages.
  doc_url: https://ray.readthedocs.io/
  dev_url: https://github.com/ray-project/ray

extra:
  recipe-maintainers:
    - apmorton
    - timkpaine
    - dHannasch
    - h-vetinari
    - vnlitvinov
    - krfricke
    - mattip
