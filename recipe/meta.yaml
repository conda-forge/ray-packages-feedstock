{% set version = "2.1.0" %}

package:
  name: ray-packages
  version: {{ version }}

source:
  url: https://github.com/ray-project/ray/archive/ray-{{ version }}.tar.gz
  sha256: 61d2ba82fe0d61d6d85394fff72766e5439c4e1ba25924ba8eadf38928fef463
  patches:
    - patches/0001-Redis-deps-now-build-but-do-not-link.patch
    - patches/0002-Disable-making-non-core-entry-scripts.patch
    - patches/0003-Remove-all-dependencies-from-setup.py.patch
    - patches/0004-Ignore-warnings-in-event.cc-and-logging.cc.patch
    - patches/0005-Add-bazel-linkopts-libs.patch


build:
  number: 1
  # skip on MacOS, needs macos 10.15
  skip: true  # [osx]

# Need these up here for conda-smithy to handle them properly.
requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}

outputs:
  - name: ray-all
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        - {{ pin_subpackage('ray-k8s', exact=True) }}
        - {{ pin_subpackage('ray-data', exact=True) }}
        - {{ pin_subpackage('ray-rllib', exact=True) }}
        - {{ pin_subpackage('ray-serve', exact=True) }}
        - {{ pin_subpackage('ray-tune', exact=True) }}
    test:
      imports:
        # dummy test; actual tests are in subpackages
        - ray

  - name: ray-core
    script: build-core.sh  # [not win]
    script: build-core.bat  # [win]
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - bazel =4.2.2
        - sysroot_linux-64 2.17  # [linux64]
        - curl
        - cython >=0.29.26
        - make
        - m2-bash  # [win]
        - python
      host:
        - python
        - pip
        - packaging
        - openjdk =11
      run:
        - python
        - aiosignal
        - attrs
        - click >=7.0
        - colorama
        - filelock
        - frozenlist
        # mattip/h-vetinari [2022/11]: unclear problems with conda-forge's 1.49
        - grpcio >=1.42,<1.49
        - jsonschema
        - msgpack-python >=1.0.0
        - numpy >=1.20
        - packaging  # [py>=310]
        - protobuf >=3.15.3,!=3.19.5
        - psutil
        - pyyaml
        - requests
        - setproctitle
        - virtualenv

    test:
      imports:
        - ray
        - ray._raylet
        - ray.actor
        - ray.runtime_context
        - ray._private.state
        - ray._private.worker
      commands:
        - python -c "import ray; ray.init(include_dashboard=False)"

  - name: ray-default
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-core', exact=True) }}
        - {{ pin_subpackage('ray-dashboard', exact=True) }}
        - aiohttp >=3.7
        - aiohttp-cors
        - colorful
        - gpustat >=1.0.0
        - opencensus
        - prometheus_client >=0.7.1, <0.14.0
        - pydantic
        - requests
        - smart_open
        - py-spy >=0.2.0

    test:
      imports:
        # ray-default is a convenience wrapper with no imports of its own
        - ray
        # init-code seemingly depends on platform or other ambient things;
        # the following doesn't get triggered in CI, but was a problem in
        # https://github.com/conda-forge/ray-packages-feedstock/issues/16
        - ray._private.metrics_agent

  - name: ray-dashboard
    build:
      script:
        - cd python/ray/dashboard/client
        - npm install
        - npm ci
        - npm run build
        # not sure why this seems to get copied on windows but not linux...
        - mkdir -p $SP_DIR/ray/dashboard/client             # [not win]
        - cp -R ./build $SP_DIR/ray/dashboard/client/build  # [not win]
    requirements:
      build:
        - nodejs
      host:
        - nodejs
        - python
      run:
        - python
        - {{ pin_subpackage('ray-core', exact=True) }}
        - typing-extensions
    test:
      imports:
        - ray.dashboard
      commands:
        - python -c "import ray; ray.init(include_dashboard=True)"

  - name: ray-k8s
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-core', exact=True) }}
        - kubernetes
        - urllib3
    test:
      imports:
        # there doesn't appear to be a k8s module, not sure how to test this
        - ray

  - name: ray-data
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-core', exact=True) }}
        - numpy >=1.20
        - pandas >=1.3
        - pyarrow >=6.0.1, <7.0.0
        - fsspec
    test:
      imports:
        - ray.data

  - name: ray-rllib
    build:
      entry_points:
        - rllib = ray.rllib.scripts:cli
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-tune', exact=True) }}
        - dm-tree
        - gym >=0.21.0, <0.24
        - lz4
        - matplotlib-base !=3.4.3
        - pyyaml
        - scikit-image
        - scipy

    test:
      imports:
        - ray.rllib
      commands:
        - rllib --help

  - name: ray-serve
    build:
      entry_points:
        - serve = ray.serve.scripts:cli
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        - uvicorn
        - requests
        - starlette
        - fastapi
        - aiorwlock
    test:
      imports:
        - ray.serve

  - name: ray-tune
    build:
      entry_points:
        - tune = ray.tune.scripts:cli
    requirements:
      host:
        - python
      run:
        - python
        - {{ pin_subpackage('ray-default', exact=True) }}
        - pandas
        - requests
        - tabulate
        - tensorboardX >=1.9
    test:
      imports:
        - ray.tune

about:
  home: https://github.com/ray-project/ray
  license: Apache-2.0
  license_family: Apache
  license_file:
    - LICENSE
    - licenses/abseil-LICENSE.txt
    - licenses/antirez-redis-COPYING.txt
    - licenses/arrow-LICENSE.txt
    - licenses/boost-LICENSE_1_0.txt
    - licenses/boringssl-LICENSE.txt
    - licenses/deckarep-golang-set-LICENSE.txt
    - licenses/flatbuffers-LICENSE.txt
    - licenses/gabime-spdlog-LICENSE.txt
    - licenses/gflags-COPYING.txt
    - licenses/glog-COPYING.txt
    - licenses/go-logr-LICENSE.txt
    - licenses/googletest-LICENSE.txt
    - licenses/grpc-LICENSE.txt
    - licenses/msgpack-COPYING.txt
    - licenses/onsi-ginkgo-LICENSE.txt
    - licenses/onsi-gomega-LICENSE.txt
    - licenses/opencensus-LICENSE.txt
    - licenses/opencensus-proto-LICENSE.txt
    - licenses/prometheus-LICENSE.txt
    - licenses/redis-hiredis-COPYING.txt
    - licenses/tporadowski-redis-license.txt
    - licenses/zlib-LICENSE.txt
  summary: Ray is a fast and simple framework for building and running distributed applications.
  description: |
    Ray is a fast and simple framework for building and running
    distributed applications. It is split into ray-core, ray-default,
    ray-dashboard, ray-serve, ray-rllib, ray-k8s, ray-data, ray-tune, and
    ray-all packages.
  doc_url: https://ray.readthedocs.io/
  dev_url: https://github.com/ray-project/ray

extra:
  recipe-maintainers:
    - dHannasch
    - h-vetinari
    - vnlitvinov
    - krfricke
    - mattip
