From 257da6adc78782ae7cc94a50b86dcad8647532b1 Mon Sep 17 00:00:00 2001
From: Matti Picus <matti.picus@gmail.com>
Date: Wed, 5 Feb 2025 22:39:59 +1100
Subject: [PATCH 6/9] patch protobuf use of nan on windows

---
 bazel/ray_deps_setup.bzl                      |  4 +++
 .../patches/protobuf-windows-const-nan.patch  | 32 +++++++++++++++++++
 2 files changed, 36 insertions(+)
 create mode 100644 thirdparty/patches/protobuf-windows-const-nan.patch

diff --git a/bazel/ray_deps_setup.bzl b/bazel/ray_deps_setup.bzl
index ab1b57d226..a4117d0ca2 100644
--- a/bazel/ray_deps_setup.bzl
+++ b/bazel/ray_deps_setup.bzl
@@ -96,6 +96,10 @@ def ray_deps_setup():
         urls = [
             "https://github.com/protocolbuffers/protobuf/archive/refs/tags/v28.2.tar.gz",
         ],
+        patches = [
+            "@com_github_ray_project_ray//thirdparty/patches:protobuf-windows-const-nan.patch",
+            
+        ],
     )
 
     # NOTE(lingxuan.zlx): 3rd party dependencies could be accessed, so it suggests
diff --git a/thirdparty/patches/protobuf-windows-const-nan.patch b/thirdparty/patches/protobuf-windows-const-nan.patch
new file mode 100644
index 0000000000..4c4cab48f4
--- /dev/null
+++ b/thirdparty/patches/protobuf-windows-const-nan.patch
@@ -0,0 +1,32 @@
+diff -u upb/message/internal/message.c /tmp/message.c 
+--- upb/message/internal/message.c
++++ upb/message/internal/message.c
+@@ -19,7 +19,27 @@
+ 
+ const float kUpb_FltInfinity = INFINITY;
+ const double kUpb_Infinity = INFINITY;
+-const double kUpb_NaN = NAN;
++
++// The latest win32 SDKs have an invalid definition of NAN.
++// https://developercommunity.visualstudio.com/t/NAN-is-no-longer-compile-time-constant-i/10688907
++//
++// Unfortunately, the `0.0 / 0.0` workaround doesn't work in Clang under C23, so
++// try __builtin_nan first, if that exists.
++#ifdef _WIN32
++#ifdef __has_builtin
++#if __has_builtin(__builtin_nan)
++#define UPB_NAN __builtin_nan("0")
++#endif
++#endif
++#ifndef UPB_NAN
++#define UPB_NAN 0.0 / 0.0
++#endif
++#else
++// For !_WIN32, assume math.h works.
++#define UPB_NAN NAN
++#endif
++const double kUpb_NaN = UPB_NAN;
++
+ 
+ bool UPB_PRIVATE(_upb_Message_Realloc)(struct upb_Message* msg, size_t need,
+                                        upb_Arena* a) {
-- 
2.43.0

