From 2595ec41a9d00d40b8b56442087f109307f403ec Mon Sep 17 00:00:00 2001
From: mattip <matti.picus@gmail.com>
Date: Fri, 28 Feb 2025 15:22:50 +0200
Subject: [PATCH 3/9] remove dependencies

---
 python/setup.py | 159 +++++-------------------------------------------
 1 file changed, 14 insertions(+), 145 deletions(-)

diff --git a/python/setup.py b/python/setup.py
index c287eb4cc1..25b08d3540 100644
--- a/python/setup.py
+++ b/python/setup.py
@@ -225,132 +225,23 @@ ray_files += [
 # also update the matching section of requirements/requirements.txt
 # in this directory
 if setup_spec.type == SetupType.RAY:
-    pandas_dep = "pandas >= 1.3"
-    numpy_dep = "numpy >= 1.20"
-    pyarrow_deps = [
-        "pyarrow >= 9.0.0",
-        "pyarrow <18; sys_platform == 'darwin' and platform_machine == 'x86_64'",
-    ]
-    pydantic_dep = "pydantic!=2.0.*,!=2.1.*,!=2.2.*,!=2.3.*,!=2.4.*,<3"
     setup_spec.extras = {
-        "cgraph": [
-            "cupy-cuda12x; sys_platform != 'darwin'",
-        ],
-        "client": [
-            # The Ray client needs a specific range of gRPC to work:
-            # Tracking issues: https://github.com/grpc/grpc/issues/33714
-            "grpcio != 1.56.0; sys_platform == 'darwin'",
-            "grpcio",
-        ],
-        "data": [
-            numpy_dep,
-            pandas_dep,
-            *pyarrow_deps,
-            "fsspec",
-        ],
-        "default": [
-            # If adding dependencies necessary to launch the dashboard api server,
-            # please add it to python/ray/dashboard/optional_deps.py as well.
-            "aiohttp >= 3.7",
-            "aiohttp_cors",
-            "colorful",
-            "py-spy >= 0.2.0; python_version < '3.12'",  # noqa:E501
-            "py-spy >= 0.4.0; python_version >= '3.12'",  # noqa:E501
-            "requests",
-            "grpcio >= 1.32.0; python_version < '3.10'",  # noqa:E501
-            "grpcio >= 1.42.0; python_version >= '3.10'",  # noqa:E501
-            "opencensus",
-            pydantic_dep,
-            "prometheus_client >= 0.7.1",
-            "smart_open",
-            "virtualenv >=20.0.24, !=20.21.1",  # For pip runtime env.
-        ],
-        "observability": [
-            "opentelemetry-api",
-            "opentelemetry-sdk",
-            "opentelemetry-exporter-otlp",
-            "memray; sys_platform != 'win32'",
-        ],
-        "serve": [
-            "uvicorn[standard]",
-            "requests",
-            "starlette",
-            "fastapi",
-            "watchfiles",
-        ],
-        "tune": [
-            "pandas",
-            "tensorboardX>=1.9",
-            "requests",
-            *pyarrow_deps,
-            "fsspec",
-        ],
+        "cgraph": [],
+        "air": [],
+        "client": [],
+        "data": [],
+        "default": [],
+        "observability": [],
+        "rllib": [],
+        "serve": [],
+        "serve-grpc": [],
+        "tune": [],
+        "train": [],
     }
 
-    # Both "adag" and "cgraph" are for Compiled Graphs.
-    # "adag" is deprecated and will be removed in the future.
-    setup_spec.extras["adag"] = list(setup_spec.extras["cgraph"])
-
-    # Ray Serve depends on the Ray dashboard components.
-    setup_spec.extras["serve"] = list(
-        set(setup_spec.extras["serve"] + setup_spec.extras["default"])
-    )
-
-    # Ensure gRPC library exists for Ray Serve gRPC support.
-    setup_spec.extras["serve-grpc"] = list(
-        set(
-            setup_spec.extras["serve"]
-            + [
-                "grpcio >= 1.32.0; python_version < '3.10'",  # noqa:E501
-                "grpcio >= 1.42.0; python_version >= '3.10'",  # noqa:E501
-                "pyOpenSSL",
-            ]
-        )
-    )
-
-    if RAY_EXTRA_CPP:
-        setup_spec.extras["cpp"] = ["ray-cpp==" + setup_spec.version]
-
-    setup_spec.extras["rllib"] = setup_spec.extras["tune"] + [
-        "dm_tree",
-        "gymnasium==1.0.0",
-        "lz4",
-        "ormsgpack==1.7.0",
-        "pyyaml",
-        "scipy",
-    ]
-
-    setup_spec.extras["train"] = setup_spec.extras["tune"] + [pydantic_dep]
-
-    # Ray AI Runtime should encompass Data, Tune, and Serve.
-    setup_spec.extras["air"] = list(
-        set(
-            setup_spec.extras["tune"]
-            + setup_spec.extras["data"]
-            + setup_spec.extras["train"]
-            + setup_spec.extras["serve"]
-        )
-    )
-
-    # NOTE: While we keep ray[all] for compatibility, you probably
-    # shouldn't use it because it contains too many dependencies
-    # and no deployment needs all of them. Instead you should list
-    # the extras you actually need, see
-    # https://docs.ray.io/en/latest/ray-overview/installation.html#from-wheels
-    #
-    # "all" will not include "cpp" anymore. It is a big depedendency
-    # that most people do not need.
-    #
-    # Instead, when cpp is supported, we add a "all-cpp".
     setup_spec.extras["all"] = list(
-        set(
-            chain.from_iterable([v for k, v in setup_spec.extras.items() if k != "cpp"])
-        )
+        set(chain.from_iterable(setup_spec.extras.values()))
     )
-    if RAY_EXTRA_CPP:
-        setup_spec.extras["all-cpp"] = list(
-            set(setup_spec.extras["all"] + setup_spec.extras["cpp"])
-        )
 
     # "llm" is not included in all, by design. vllm's dependency set is very
     # large and specific, will likely run into dependency conflicts with other
@@ -362,19 +253,6 @@ if setup_spec.type == SetupType.RAY:
     # Keep this in sync with python/requirements/llm/llm-requirements.txt
     #
     setup_spec.extras["llm"] = list(
-        set(
-            [
-                "vllm>=0.8.5",
-                "jsonref>=1.1.0",
-                "jsonschema",
-                "ninja",
-                # async-timeout is a backport of asyncio.timeout for python < 3.11
-                "async-timeout; python_version < '3.11'",
-                "typer",
-            ]
-            + setup_spec.extras["data"]
-            + setup_spec.extras["serve"]
-        )
     )
 
 # These are the main dependencies for users of ray. This list
@@ -385,16 +263,7 @@ if setup_spec.type == SetupType.RAY:
 # install-core-prerelease-dependencies.sh so we can test
 # new releases candidates.
 if setup_spec.type == SetupType.RAY:
-    setup_spec.install_requires = [
-        "click >= 7.0",
-        "filelock",
-        "jsonschema",
-        "msgpack >= 1.0.0, < 2.0.0",
-        "packaging",
-        "protobuf >= 3.15.3, != 3.19.5",
-        "pyyaml",
-        "requests",
-    ]
+    setup_spec.install_requires = []
 
 
 def is_native_windows_or_msys():
@@ -828,7 +697,7 @@ setuptools.setup(
     # The BinaryDistribution argument triggers build_ext.
     distclass=BinaryDistribution,
     install_requires=setup_spec.install_requires,
-    setup_requires=["cython >= 3.0.12", "pip", "wheel"],
+    setup_requires=[],
     extras_require=setup_spec.extras,
     entry_points={
         "console_scripts": [
-- 
2.43.0

